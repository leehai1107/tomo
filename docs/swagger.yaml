definitions:
  apiwrapper.APIResponse:
    properties:
      code:
        $ref: '#/definitions/errors.ErrorType'
      data: {}
      error: {}
      message:
        type: string
      status:
        type: integer
    type: object
  errors.ErrorType:
    enum:
    - 2
    - 1
    - 0
    - -1
    - -2
    - -3
    - -4
    - -5
    - -6
    - -7
    - -8
    - -9
    - -10
    - -11
    - -12
    - -13
    - -14
    - -15
    - -16
    - -17
    - -49
    type: integer
    x-enum-varnames:
    - Processing
    - Success
    - Unknown
    - BadRequestErr
    - NotFound
    - AuthenticationFailed
    - InternalServerError
    - IllegalStateError
    - SendMessageError
    - CallInternalAPIError
    - InvalidData
    - SerializingError
    - DeserializingError
    - CastingError
    - ParsingError
    - ConflictError
    - CallGRPCAPIError
    - EncryptError
    - DecryptError
    - MethodError
    - Fail
  request.Login:
    description: User login request
    properties:
      email:
        description: User's email address
        example: user@example.com
        type: string
      password:
        description: User's password
        example: password123
        type: string
    required:
    - email
    - password
    type: object
  request.Register:
    description: User registration request
    properties:
      email:
        description: User's email address
        example: user@example.com
        type: string
      first_name:
        description: User's first name
        example: John
        type: string
      last_name:
        description: User's last name
        example: Doe
        type: string
      password:
        description: User's password
        example: password123
        minLength: 8
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
info:
  contact: {}
paths:
  /internal/api/v1/chat/ws/{roomId}:
    get:
      description: Establish a WebSocket connection for real-time chat
      parameters:
      - description: Room ID
        in: path
        name: roomId
        required: true
        type: string
      responses:
        "101":
          description: Switching Protocols to WebSocket
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/apiwrapper.APIResponse'
      summary: WebSocket connection
      tags:
      - chat
  /internal/api/v1/user/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: Success response with token
          schema:
            $ref: '#/definitions/apiwrapper.APIResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/apiwrapper.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apiwrapper.APIResponse'
      summary: User login
      tags:
      - user
  /internal/api/v1/user/register:
    post:
      consumes:
      - application/json
      description: Register a new user account
      parameters:
      - description: Registration information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.Register'
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            $ref: '#/definitions/apiwrapper.APIResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/apiwrapper.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/apiwrapper.APIResponse'
      summary: Register new user
      tags:
      - user
swagger: "2.0"
